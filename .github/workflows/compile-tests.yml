name: Compilation Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-gcc:
    name: Build with GCC
    runs-on: ubuntu-latest

    steps:
      - name: Install dependencies
        run: sudo apt update && sudo apt-get install -y gcc cmake make

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache Fetchcontent
        id: cache-fetchcontent
        uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}/engine/build/_deps/*-src
          key: ${{ runner.os }}-fetchcontent-${{ hashFiles('**/yoyoengine/engine/CMakeLists.txt') }}

      - name: Configure with CMake
        run: |
          mkdir -p ${{ github.workspace }}/engine/build
          cd ${{ github.workspace }}/engine/build
          CC=gcc cmake -DBUILD_LUA_RUNTIME=OFF -DZOOGIES_DEVELOPMENT_BUILD=TRUE ..

      - name: Build with GCC
        run: |
          cd ${{ github.workspace }}/engine/build
          make -j${nproc}

  build-clang:
    name: Build with Clang
    runs-on: ubuntu-latest

    steps:
      - name: Install dependencies
        run: sudo apt update && sudo apt-get install -y clang cmake make

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache Fetchcontent
        id: cache-fetchcontent
        uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}/engine/build/_deps/*-src
          key: ${{ runner.os }}-fetchcontent-${{ hashFiles('**/yoyoengine/engine/CMakeLists.txt') }}
      
      - name: Configure with CMake
        run: |
          mkdir -p ${{ github.workspace }}/engine/build
          cd ${{ github.workspace }}/engine/build
          CC=clang cmake -DBUILD_LUA_RUNTIME=OFF -DZOOGIES_DEVELOPMENT_BUILD=TRUE ..
      
      - name: Build with Clang
        run: |
          cd ${{ github.workspace }}/engine/build
          make -j${nproc}

  build-msvc:
      name: Build with MSVC
      runs-on: windows-latest

      steps:
        - name: Checkout code
          uses: actions/checkout@v4

        - name: Cache Fetchcontent
          id: cache-fetchcontent
          uses: actions/cache@v4
          with:
            path: ${{ github.workspace }}\\engine\\build\\_deps\\*-src
            key: windows-fetchcontent-${{ hashFiles('**/yoyoengine/engine/CMakeLists.txt') }}
        - uses: ilammy/msvc-dev-cmd@v1.13.0
        - name: Configure with CMake
          run: |
            New-Item -ItemType Directory -Force -Path "${{ github.workspace }}\\engine\\build"
            cd ${{ github.workspace }}\\engine\\build
            cmake -DBUILD_LUA_RUNTIME=OFF -DZOOGIES_DEVELOPMENT_BUILD=TRUE ..
        
        - name: Build with MSVC
          run: |
            cd ${{ github.workspace }}\\engine\\build
            cmake --build . --config Release